name: Build and Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ☕ Set up Java 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: 🔧 Build with Maven
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: 📤 Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: target/Room_Management_System-0.0.1-SNAPSHOT.jar
          target: /home/ec2-user/
          strip_components: 1

      - name: 🚀 Deploy Application with systemd
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "📦 Creating systemd service..."
            sudo bash -c 'cat > /etc/systemd/system/room-management.service' << 'EOL'
            [Unit]
            Description=Room Management System
            After=network.target
            
            [Service]
            User=ec2-user
            WorkingDirectory=/home/ec2-user
            ExecStart=/usr/bin/java \
              -Dspring.data.mongodb.uri="${{ secrets.MONGO_URI }}" \
              -Dspring.mail.username="${{ secrets.MAIL_USERNAME }}" \
              -Dspring.mail.password="${{ secrets.MAIL_PASSWORD }}" \
              -jar Room_Management_System-0.0.1-SNAPSHOT.jar
            SuccessExitStatus=143
            TimeoutStopSec=10
            Restart=on-failure
            RestartSec=5
            
            [Install]
            WantedBy=multi-user.target
            EOL
            
            echo "🔄 Reloading systemd and starting service..."
            sudo systemctl daemon-reload
            sudo systemctl enable room-management.service
            sudo systemctl restart room-management.service

      - name: 🩺 Verify Application Health
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Checking application health..."
            for i in {1..10}; do
              if curl -s -f http://localhost:8080/actuator/health; then
                echo -e "\n✅ Application is up and running!"
                exit 0
              fi
              echo -n "."
              sleep 10
            done
            echo -e "\n❌ Application failed to start. Showing logs:"
            journalctl -u room-management.service -n 50 --no-pager
            exit 1

      - name: 📄 Show Application Logs
        if: always()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "📝 Last 50 lines of application logs:"
            journalctl -u room-management.service -n 50 --no-pager